#textdomain wesnoth-Captured_by_a_Nightmare

# This file:
# - includes pickuppable_items.cfg file with macros for picking up an item
# - includes contusion.cfg file with macros for the "Heavy Sword" and corresponding "contusion" logic
# - includes nightmare_potions.cfg required for scenario 07_escaping_the_nightmare
# - contains code for artifacts (aka items)
# - contains code for loot managing

{./items/pickuppable_items.cfg}
{./items/loot_system.cfg}
{./items/contusion.cfg}
{./items/nightmare_potions.cfg}

#define OBJECT_LUCK_AMULET GIVE_TO_ID
  [object]
    name=_"Amulet of Luck"
    image=icons/ankh_necklace.png
    description=_"This amulet grants the wearer +10% defense"
    [filter]
      id={GIVE_TO_ID}
    [/filter]
    [effect]
      apply_to=new_ability
      [abilities]
        [dummy]
          id=amulet_of_luck
          name=_"lucky"
          female_name=_"female^lucky"
          description=_"This unit wears amulet of luck which grants +10% defense"
        [/dummy]
      [/abilities]
    [/effect]
    [effect]
      apply_to=defense
      # defense values means chance to hit, decreasing it makes the unit harder to hit
      [defense]
        deep_water=-10
        shallow_water=-10
        reef=-10
        swamp_water=-10
        flat=-10
        sand=-10
        forest=-10
        hills=-10
        mountains=-10
        village=-10
        castle=-10
        cave=-10
        frozen=-10
        fungus=-10
      [/defense]
    [/effect]
  [/object]
#enddef

#define OBJECT_QUIVER
  [object]
    name=_"Quiver of First Strike"
    image=items/quiver.png
    description=_"This quiver grants firstrike special for bows and crossbows."
    [effect]
      apply_to=attack
      name=bow,crossbow
      [set_specials]
        {WEAPON_SPECIAL_FIRSTSTRIKE}
        mode=append
      [/set_specials]
    [/effect]
  [/object]
#enddef

#define ITEM_QUIVER X Y SIDE WIN_CONDITION LOOT_TAKEN_CONDITION
  {PICKUPPABLE_ITEM_1_CANNOT_TAKE quiver {X} {Y}
    (
      side={SIDE}
      [has_attack]
        name=bow,crossbow
      [/has_attack]
    )
    items/quiver.png
    _"This quiver grants firstrike special for bows and crossbows."
    _"quiver^Take it"
    _"quiver^Leave it"
    _"This item is suitable only for units with a bow or a crossbow."
    (
      {OBJECT_QUIVER}
      {MARK_HAS_ITEM {X} {Y}}
      {CHECK_WIN_AND_LOOT_TAKEN {WIN_CONDITION} {LOOT_TAKEN_CONDITION}}
    )
  }
#enddef

#define OBJECT_HOPLITE_ARMS
  [object]
    name=_"Hoplite Arms"
    image=units/merfolk/hoplite.png
    description=_"Arms of a merman hoplite. Spear grants an extra attack. Buckler gives +15% blade, pierce and impact resistances."
    [effect]
      apply_to=new_ability
      [abilities]
        [dummy]
          id=hoplite_arms
          name=_"hoplite arms"
          description=_"Spear grants an extra attack. Buckler gives +15% blade, pierce and impact resistances."
        [/dummy]
      [/abilities]
    [/effect]
    [effect]
      apply_to=attack
      name=spear
      increase_attacks=1
    [/effect]
    [effect]
      apply_to=resistance
      # resistance values means taken damage percentage, decreasing it makes the unit take less damage
      [resistance]
        blade=-15
        pierce=-15
        impact=-15
      [/resistance]
    [/effect]
  [/object]
#enddef

#define ITEM_HOPLITE_ARMS X Y SIDE WIN_CONDITION LOOT_TAKEN_CONDITION
  {PICKUPPABLE_ITEM_1_CANNOT_TAKE hoplite_arms {X} {Y}
    (
      side={SIDE}
      [has_attack]
        name=spear
      [/has_attack]
    )
    items/spear-shield.png
    _"Spear grants an extra attack. Buckler gives +15% blade, pierce and impact resistances."
    _"hoplite_arms^Take it"
    _"hoplite_arms^Leave it"
    _"This item is suitable only for a unit with a spear."
    (
      {OBJECT_HOPLITE_ARMS}
      {MARK_HAS_ITEM {X} {Y}}
      {CHECK_WIN_AND_LOOT_TAKEN {WIN_CONDITION} {LOOT_TAKEN_CONDITION}}
    )
  }
#enddef

#define OBJECT_POISON_FOR_ARROWS
  [object]
    name=_"Spider's Poison"
    image=icons/potion_green_small.png
    description=_"This grease poisons bow or crossbow pierce attacks."
    [effect]
      apply_to=attack
      name=bow,crossbow
      type=pierce
      [set_specials]
        {WEAPON_SPECIAL_POISON}
        mode=append
      [/set_specials]
    [/effect]
  [/object]
#enddef

#define ITEM_POISON_FOR_ARROWS X Y SIDE WIN_CONDITION LOOT_TAKEN_CONDITION
  {PICKUPPABLE_ITEM_1_CANNOT_TAKE poison_arrow {X} {Y}
    (
      side={SIDE}
      [has_attack]
        name=bow,crossbow
      [/has_attack]
    )
    items/potion-poison.png
    _"This grease poisons bow or crossbow pierce attacks."
    _"poison_arrow^Take it"
    _"poison_arrow^Leave it"
    _"This item is suitable only for units with a bow or a crossbow."
    (
      {OBJECT_POISON_FOR_ARROWS}
      {MARK_HAS_ITEM {X} {Y}}
      [modify_side]
        side={SIDE}
        recruit=Goblin Spearman,Orcish Grunt,Orcish Archer,Orcish Assassin,Wolf Rider
      [/modify_side]
      {ECHO _"Rark can now recruit assassins."}
      {CHECK_WIN_AND_LOOT_TAKEN {WIN_CONDITION} {LOOT_TAKEN_CONDITION}}
    )
  }
#enddef

#define OBJECT_ELEMENTAL_ROBE
  [object]
    name=_"Elemental Robe"
    image="icons/armor-chain.png"
    description=_"This robe grants the wearer 40% fire and cold resistances."
    [effect]
      apply_to=new_ability
      [abilities]
        [dummy]
          id=elemental_robe
          name=_"elemental robe"
          description=_"Magical elemental robe provides 40% fire and cold resistances."
        [/dummy]
      [/abilities]
    [/effect]
    [effect]
      apply_to=resistance
      # resistance values means taken damage percentage, decreasing it makes the unit take less damage
      [resistance]
        cold=-40
        fire=-40
      [/resistance]
    [/effect]
  [/object]
#enddef

#define ITEM_ELEMENTAL_ROBE X Y SIDE WIN_CONDITION LOOT_TAKEN_CONDITION
  {PICKUPPABLE_ITEM_2_CANNOT_TAKE elemental_robe {X} {Y}
    (
      side={SIDE}
      [not]
        ability=rune_armor
      [/not]
      [not]
        type_adv_tree=cban Wolf
      [/not]
    )
    "items/cloak-green.png~CS(60,40,60)"
    _"This robe grants the wearer 40% fire and cold resistances"
    _"elemental_robe^Wear it"
    _"elemental_robe^Leave it"
    (
      SIDE={SIDE}
      ability=rune_armor
    )
    _"This unit already wears the rune armor and can't use the elemental robe."
    (
      side={SIDE}
      type_adv_tree=cban Wolf
    )
    _"Wolf can't wear the robe."
    (
      {OBJECT_ELEMENTAL_ROBE}
      {MARK_HAS_ITEM {X} {Y}}
      {CHECK_WIN_AND_LOOT_TAKEN {WIN_CONDITION} {LOOT_TAKEN_CONDITION}}
    )
  }
#enddef

#define OBJECT_REGENERATION_POTION
  [object]
    name=_"Potion of Regeneration"
    image=icons/potion_green_medium.png
    description=_"This unit is now able to regenerate."
    [effect]
      apply_to=new_ability
      [abilities]
        {ABILITY_REGENERATES}
      [/abilities]
    [/effect]
  [/object]
#enddef

#define ITEM_REGENERATION_POTION X Y SIDE
  {PICKUPPABLE_ITEM_1_CANNOT_TAKE potion_regeneration {X} {Y}
    (
      side={SIDE}
      [not]
        ability=regenerates
      [/not]
    )
    items/potion-green.png
    _"One who drinks this potion will be able to regenerate."
    _"potion_regeneration^Drink it"
    _"potion_regeneration^Leave it"
    _"This unit already has regeneration ability."
    (
      {OBJECT_REGENERATION_POTION}
      {MARK_HAS_ITEM {X} {Y}}
    )
  }
#enddef

#define OBJECT_RUNE_ARMOR
  [object]
    name=_"Rune Armor"
    image=icons/steel_armor.png
    description=_"This rune armor grants resistances: +30% for blade, pierce, impact and +10% for arcane, fire, cold."
    [effect]
      apply_to=new_ability
      [abilities]
        [dummy]
          id=rune_armor
          name=_"rune armor"
          description=_"Rune armor grants resistances: +30% for blade, pierce, impact and +10% for arcane, fire, cold."
        [/dummy]
      [/abilities]
    [/effect]
    [effect]
      apply_to=resistance
      # resistance values means taken damage percentage, decreasing it makes the unit take less damage
      [resistance]
        blade=-30
        pierce=-30
        impact=-30
        arcane=-10
        fire=-10
        cold=-10
      [/resistance]
    [/effect]
  [/object]
#enddef

#define ITEM_RUNE_ARMOR X Y SIDE
  {PICKUPPABLE_ITEM_2_CANNOT_TAKE rune_armor {X} {Y}
    (
      side={SIDE}
      [not]
        ability=elemental_robe
      [/not]
      [not]
        type_adv_tree=cban Wolf
      [/not]
    )
    items/armor.png
    _"Rune armor grants resistances: +30% for blade, pierce, impact and +10% for arcane, fire, cold."
    _"rune_armor^Wear it"
    _"rune_armor^Leave it"
    (
      SIDE={SIDE}
      ability=elemental_robe
    )
    _"This unit already wears the elemental robe and can't use the rune armor."
    (
      side={SIDE}
      type_adv_tree=cban Wolf
    )
    _"Wolf can't wear the armor."
    (
      {OBJECT_RUNE_ARMOR}
      {MARK_HAS_ITEM {X} {Y}}
    )
  }
#enddef

# This macro is used for Ruby and Diamond objects
#define OBJECT_GEM NAME TRANSLATABLE_NAME TRANSLATABLE_CAPITAL_NAME IMAGE X Y
  [object]
    name={TRANSLATABLE_CAPITAL_NAME}
    image={IMAGE}
    description=_"This is a very expensive gem. Upkeep and recall cost of the unit will be free."
    [effect]
      apply_to=new_ability
      [abilities]
        [dummy]
          id={NAME}
          name={TRANSLATABLE_NAME}
          description=_"This unit has a gem. Unit's upkeep and recall cost are free."
        [/dummy]
      [/abilities]
    [/effect]
    [effect]
      apply_to=recall_cost
      set=0
    [/effect]
    [effect]
      apply_to=loyal
    [/effect]
  [/object]
#enddef

# This macro is used for Ruby and Diamond items
#define ITEM_GEM NAME TRANSLATABLE_NAME TRANSLATABLE_CAPITAL_NAME IMAGE X Y SIDE
  {PICKUPPABLE_ITEM_2_CANNOT_TAKE {NAME} {X} {Y}
    (
      side={SIDE}
      [not]
        canrecruit=yes
      [/not]
      [not]
        id={HERO_IDS}
      [/not]
      [not]
        type_adv_tree=cban Wolf
      [/not]
    )
    {IMAGE}
    _"This is a very valuable gem. One who takes it becomes loyal and its recall cost in the next scenarios will be free."
    _"Take the gem"
    _"Leave the gem"
    (
      SIDE={SIDE}
      canrecruit=yes
      [or]
        id={HERO_IDS}
      [/or]
    )
    _"Leaders and heroes don't need this gem."
    (
      SIDE={SIDE}
      type_adv_tree=cban Wolf
    )
    _"Wolf can't take the gem."
    (
      {OBJECT_GEM {NAME} {TRANSLATABLE_NAME} {TRANSLATABLE_CAPITAL_NAME} {IMAGE} {X} {Y}}
      {MARK_HAS_GEM {X} {Y}}
    )
  }
#enddef

#define ITEM_RUBY X Y SIDE
  {ITEM_GEM ruby (_"ruby") (_"Ruby") items/ball-magenta.png {X} {Y} {SIDE}}
#enddef

#define ITEM_EMERALD X Y SIDE
  {ITEM_GEM emerald (_"emerald") (_"Emerald") items/ball-green.png {X} {Y} {SIDE}}
#enddef

#define ITEM_DIAMOND X Y SIDE
  {ITEM_GEM diamond (_"diamond") (_"Diamond") items/ball-blue.png {X} {Y} {SIDE}}
#enddef
