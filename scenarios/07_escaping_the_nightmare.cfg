#textdomain wesnoth-Captured_by_a_Nightmare

# Code that "copies" one of the main characters and places it on the map, see side #1 and #2
# IMPORTANT NOTE: copied heroes use id <original_unit_id>_copy, e.g.rark_copy
# Id is changed since several units with the same id may break the game under some circumstances
#define COPY_HERO ID X Y
  {STORE_UNIT (id={ID}) hero_unit}
  {VARIABLE hero_unit.side 1}
  {VARIABLE hero_unit.id "$hero_unit.id|_copy"}
  [unstore_unit]
    variable=hero_unit
    find_vacant=yes
    x,y={X},{Y}
  [/unstore_unit]
  {CLEAR_VARIABLE hero_unit}
#enddef

#define CLONE_EVIL_UNIT ID X Y
  {STORE_UNIT (id={ID}) cloned_unit}
  # The main enemy side
  {VARIABLE cloned_unit.side 7}
  {VARIABLE cloned_unit.id "$cloned_unit.id|_evil"}
  # The gameplay is especially sensitive to leader's experience in case he is close to advancement
  # Make all enemy units unexperienced for consistency
  {VARIABLE cloned_unit.experience 0}
  [unstore_unit]
    variable=cloned_unit
    find_vacant=yes
    x,y={X},{Y}
  [/unstore_unit]
  [modify_unit]
    [filter]
      id=$cloned_unit.id
    [/filter]
    [object]
      [effect]
        apply_to=hitpoints
        increase_total={ON_DIFFICULTY5 (-40%) (-20%) (10%) (30%) (50%)}
        heal_full=yes
      [/effect]
      [effect]
        apply_to=status
        remove=poisoned,slowed
      [/effect]
    [/object]
  [/modify_unit]
  {CLEAR_VARIABLE cloned_unit}
#enddef

# Animated mausoleum similar to Wesnoth core macro from image-utils.cfg, but is is not shown under the water
#define ANIMATED_MAUSOLEUM_NO_WATER X Y
  [terrain_graphics]
    x,y={X},{Y}
    [tile]
      x,y=0,0
      set_flag=mausoleum
    [/tile]
  [/terrain_graphics]
  [terrain_graphics]
    map="
, *
* , *
, 1
* , *
, *"
    [tile]
      pos=1
      has_flag=mausoleum
      # This "type=!,W*^*" makes the tile match for any hex without water
      type=!,W*^*
    [/tile]
    [image]
      layer=0
      center=92,138
      # wmlscope: start ignoring
      name="../scenery/mausoleum[01~18].png:140"
      # wmlscope: stop ignoring
    [/image]
  [/terrain_graphics]
#enddef

[scenario]
  id=07_escaping_the_nightmare
  next_scenario=08_the_time_has_come
  name= _"Escaping The Nightmare"
  map_data="{~add-ons/Captured_by_a_Nightmare/maps/07_escaping_the_nightmare.map}"
  turns=-1

  {RAINY_DAY}
  {TERRAIN_GRAPHICS_RAIN}
  {SOUND_RAIN}
  [time_area]
    x=7,1-40,13-40,13-33,15-32,25-32
    y=14,1-13,14,15-16,17-19,20-21
    {UNDERGROUND}
  [/time_area]
  [time_area]
    x=34-40,33-40,33-37,39,37
    y=15,16-19,20,20,21
    {INDOORS}
  [/time_area]

  {ANIMATED_MAUSOLEUM_NO_WATER 25 13}
  {ANIMATED_MAUSOLEUM_NO_WATER 29 11}
  {ANIMATED_MAUSOLEUM_NO_WATER 31 13}

  {SCENARIO_MUSIC_WITH_SILENCE "the_deep_path.ogg"}
  {EXTRA_SCENARIO_MUSIC_WITH_SILENCE "heroes_rite.ogg"}
  {EXTRA_SCENARIO_MUSIC_WITH_SILENCE "into_the_shadows.ogg"}
  {EXTRA_SCENARIO_MUSIC_WITH_SILENCE "northerners.ogg"}
  {EXTRA_SCENARIO_MUSIC_WITH_SILENCE "suspense.ogg"}
  {EXTRA_SCENARIO_MUSIC_WITH_SILENCE "return_to_wesnoth.ogg"}
  {EXTRA_SCENARIO_MUSIC_WITH_SILENCE "revelation.ogg"}

  {COMMON_SCENARIO_MACRO}
  {STORY_SCENARIO_07}

  {ITEM_STEADINESS_POTION 5 7 1}
  {ITEM_FRENZY_POTION 32 5 1}
  {ITEM_AFTERLIFE_POTION 29 12 1}
  {ITEM_HEALING_POTION 19 12 1}

  # Note - this side is not the usual Rark's side
  # It is no persistent and should not have Rark's recall list
  # Rark's side is #2 and it is hidden
  [side]
    side=1
    controller=human
    persistent=no
    defeat_condition=never
    team_name=orcs
    # Will be changed to _"Orcs" once player enters the cave
    user_team_name= _"Wolves"

    shroud=yes
    fog=yes

    gold=0
    income=-2

    color=red
    {FLAG_VARIANT6 ragged}

    # Number and level of wolves depending on the difficulty
    # Daydream:  2*lvl_3 + 5*lvl_2
    # Easy:      2*lvl_3 + 3*lvl_2 + 2*lvl_1
    # Normal:    2*lvl_3 + 2*lvl_2 + 2*lvl_1
    # Hard:      1*lvl_3 + 2*lvl_2 + 3*lvl_1
    # Nightmare: 1*lvl_3 + 2*lvl_2 + 2*lvl_1
    {NAMED_UNIT 1 "cban Direwolf" 6 35 rark_wolf _"Rark"
    (
      canrecruit=yes
      unrenamable=yes
      [modifications]
        {TRAIT_INTELLIGENT}
        {TRAIT_RESILIENT}
      [/modifications]
    )}
    {NAMED_UNIT 1
      {ON_DIFFICULTY5 "cban Direwolf" "cban Direwolf" "cban Direwolf" "cban Great Wolf" "cban Great Wolf"}
      8 33 bart_wolf _"Bart"
      (
        unrenamable=yes
        {IS_HERO}
        [modifications]
          {TRAIT_LOYAL}
          {TRAIT_STRONG}
          {TRAIT_RESILIENT}
        [/modifications]
      )
    }
    # Making this wolf quick allows him to attack Elvish Archer at (6,27) in the first turn
    [unit]
        type="cban Great Wolf"
        x,y=6,33
        generate_name=yes
        [modifications]
          {OBJECT_LOYAL}
          {TRAIT_QUICK}
          {TRAIT_STRONG}
        [/modifications]
    [/unit]
    {GENERIC_UNIT 1 {ON_DIFFICULTY5 "cban Great Wolf" "cban Wolf" "cban Wolf" "cban Wolf" "cban Wolf"} 6 34}
    {LOYAL_NO_TRAIT_NO_ICON}
    {GENERIC_UNIT 1 {ON_DIFFICULTY5 "cban Great Wolf" "cban Great Wolf" "cban Great Wolf" "cban Wolf" "cban Wolf"} 7 35}
    {LOYAL_NO_TRAIT_NO_ICON}
    #ifdef DAYDREAM
      {GENERIC_UNIT 1 "cban Great Wolf" 7 33}{LOYAL_NO_TRAIT_NO_ICON}
      {GENERIC_UNIT 1 "cban Great Wolf" 7 34}{LOYAL_NO_TRAIT_NO_ICON}
    #endif
    #ifdef EASY
      {GENERIC_UNIT 1 "cban Great Wolf" 7 33}{LOYAL_NO_TRAIT_NO_ICON}
      {GENERIC_UNIT 1 "cban Wolf" 7 34}{LOYAL_NO_TRAIT_NO_ICON}
    #endif
    #ifdef NORMAL
      {GENERIC_UNIT 1 "cban Wolf" 7 34}{LOYAL_NO_TRAIT_NO_ICON}
    #endif
    #ifdef HARD
      {GENERIC_UNIT 1 "cban Wolf" 7 34}{LOYAL_NO_TRAIT_NO_ICON}
    #endif
  [/side]

  # Show the cave
  [event]
    name=side 1 turn
    [remove_shroud]
      side=1
      x,y=5,13
      radius=2
    [/remove_shroud]
    [lift_fog]
      side=1
      x,y=5,13
      radius=2
    [/lift_fog]
    {HIGHLIGHT_TEMP_IMAGE 5 12 items/gohere.png ()}
  [/event]

  # This is Rark's side. It is hidden and used to retrieve and copy the main characters units.
  # Player controls side #1
  [side]
    side=2
    save_id=rark
    hidden=yes
    controller=ai
    persistent=yes
    defeat_condition=never
    team_name=orcs
    user_team_name= _"Orcs"

    color=red
    {FLAG_VARIANT6 ragged}

    # Creating main characters for debug purposes in case they are not present in the recall list
    {RARK}{XY recall recall}
    {BART}{XY recall recall}
    {BOGARG}{XY recall recall}
    {NESSA}{XY recall recall}
  [/side]

  [side]
    side=3
    hidden=yes
    controller=ai
    team_name=elves
    user_team_name= _"Elves"
    scroll_to_leader=no

    recruit=Elvish Archer,Elvish Fighter
    {GOLD5 150 175 200 225 250}

    color=green
    # Other enemy sides do not have special flags to not spoiler
    # Also, the same colors are reused for different sides
    # {FLAG_VARIANT wood-elvish}

    [ai]
      passive_leader=yes
      recruitment_pattern=Elvish Archer,Elvish Fighter
    [/ai]

    [unit]
      canrecruit=yes
      id=elvish_leader
      name=_"Varas"
      type=Elvish Champion
      x,y=6,39
      facing=ne
      # a lot of hitpoints, it would be hard to kill him
      max_hitpoints=92
      [modifications]
        {TRAIT_DEXTROUS}
        {TRAIT_QUICK}
      [/modifications]
    [/unit]

    # elves in the castle
    {GENERIC_UNIT 3 "Elvish Archer" 5 39}
    {GENERIC_UNIT 3 "Elvish Fighter" 6 38}
    {GENERIC_UNIT 3 "Elvish Archer" 7 39}

    # elves at the road
    {GENERIC_UNIT 3 "Elvish Archer" 6 27}{GUARDIAN}
    {GENERIC_UNIT 3 "Elvish Fighter" 9 21}{GUARDIAN}
    {GENERIC_UNIT 3 "Elvish Archer" 4 15}{GUARDIAN}

  [/side]

  [side]
    side=4
    hidden=yes
    controller=ai
    defeat_condition=never
    team_name=animals
    user_team_name= _"Animals"
    color=green
    [ai]
      aggression=1
      grouping=no
    [/ai]
  [/side]

  [side]
    side=5
    hidden=yes
    controller=ai
    defeat_condition=no_units_left
    team_name=dwarves
    user_team_name= _"Dwarves"

    # fog for sighted events
    fog=yes

    color=blue
    # Flag is a spoiler
    # {FLAG_VARIANT knalgan}

    [ai]
      aggression=1
      leader_value=0
      [goal]
        value=10
        [criteria]
          side=1
        [/criteria]
      [/goal]
    [/ai]

    {GENERIC_UNIT 5 "Dwarvish Guardsman" 4 6}{GUARDIAN}{UNIT_ROLE group_1}
    {GENERIC_UNIT 5 "cban Dwarvish Miner" 3 5}{GUARDIAN}{UNIT_ROLE group_1}
    {GENERIC_UNIT 5 "cban Dwarvish Torchbearer" 7 6}{GUARDIAN}{UNIT_ROLE group_1}

    {GENERIC_UNIT 5 "cban Dwarvish Miner" 9 1}{GUARDIAN}{UNIT_ROLE group_2}
    {GENERIC_UNIT 5 "cban Dwarvish Miner" 12 1}{GUARDIAN}{UNIT_ROLE group_2}
    {GENERIC_UNIT 5 "Dwarvish Fighter" 11 4}{GUARDIAN}{UNIT_ROLE group_2}
    {GENERIC_UNIT 5 "cban Dwarvish Torchbearer" 10 2}{GUARDIAN}{UNIT_ROLE group_2}

    {GENERIC_UNIT 5 "cban Dwarvish Miner" 25 1}{GUARDIAN}{UNIT_ROLE group_3}
    {GENERIC_UNIT 5 "cban Dwarvish Miner" 24 3}{GUARDIAN}{UNIT_ROLE group_3}

    {GENERIC_UNIT 5 "cban Dwarvish Miner" 22 5}{GUARDIAN}{UNIT_ROLE group_4}
    {GENERIC_UNIT 5 "cban Dwarvish Miner" 20 8}{GUARDIAN}{UNIT_ROLE group_4}
    {GENERIC_UNIT 5 "cban Dwarvish Torchbearer" 21 7}{GUARDIAN}{UNIT_ROLE group_4}
    {GENERIC_UNIT 5 "Dwarvish Scout" 22 7}{GUARDIAN}{UNIT_ROLE group_4}
    {GENERIC_UNIT 5 "Dwarvish Fighter" 21 6}{GUARDIAN}{UNIT_ROLE group_4}

    {GENERIC_UNIT 5 "cban Dwarvish Miner" 40 9}{GUARDIAN}{UNIT_ROLE group_5}
    {GENERIC_UNIT 5 "cban Dwarvish Miner" 40 10}{GUARDIAN}{UNIT_ROLE group_5}

    [unit]
      ai_special=guardian
      role=group_6
      type="Dwarvish Berserker"
      x,y=31,6
      generate_name=yes
      [modifications]
        {TRAIT_HEALTHY}
        {TRAIT_STRONG}
      [/modifications]
    [/unit]

    {GENERIC_UNIT 5 "cban Dwarvish Miner" 17 10}{GUARDIAN}{UNIT_ROLE group_7}
    {GENERIC_UNIT 5 "cban Dwarvish Miner" 14 11}{GUARDIAN}{UNIT_ROLE group_7}
    {GENERIC_UNIT 5 "cban Dwarvish Miner" 16 12}{GUARDIAN}{UNIT_ROLE group_7}
    {GENERIC_UNIT 5 "cban Dwarvish Torchbearer" 16 11}{GUARDIAN}{UNIT_ROLE group_7}

    {GENERIC_UNIT 5 "Dwarvish Scout" 16 18}{GUARDIAN}{UNIT_ROLE group_8}
    {GENERIC_UNIT 5 "cban Dwarvish Miner" 18 18}{GUARDIAN}{UNIT_ROLE group_8}
    {GENERIC_UNIT 5 "cban Dwarvish Torchbearer" 17 19}{GUARDIAN}{UNIT_ROLE group_8}

    {GENERIC_UNIT 5 "cban Dwarvish Miner" 26 17}{GUARDIAN}{UNIT_ROLE group_9}
    {GENERIC_UNIT 5 "cban Dwarvish Miner" 27 18}{GUARDIAN}{UNIT_ROLE group_9}
    {GENERIC_UNIT 5 "cban Dwarvish Torchbearer" 25 18}{GUARDIAN}{UNIT_ROLE group_9}
    {GENERIC_UNIT 5 "Dwarvish Thunderer" 24 18}{GUARDIAN}{UNIT_ROLE group_9}
  [/side]

  [side]
    side=6
    hidden=yes
    controller=ai
    defeat_condition=no_units_left
    team_name=undead
    user_team_name= _"Undead"

    # fog for sighted events
    fog=yes

    color=purple
    # Other enemy sides do not have special flags to not spoiler
    # Also, the same colors are reused for different sides
    # {FLAG_VARIANT undead}

    [ai]
      aggression=1
      leader_value=0
      [goal]
        value=10
        [criteria]
          side=1
        [/criteria]
      [/goal]
    [/ai]

    {GENERIC_UNIT 6 "Revenant" 29 11}{GUARDIAN}
    {GENERIC_UNIT 6 "Bone Shooter" 31 13}{GUARDIAN}
    {GENERIC_UNIT 6 "Skeleton" 25 13}{GUARDIAN}
  [/side]

  [side]
    side=7
    controller=ai
    defeat_condition=never
    team_name=enemy
    user_team_name= _"The Enemy"
    scroll_to_leader=no

    gold=0
    income=-2

    color=purple
    # Flag is a spoiler
    # {FLAG_VARIANT6 ragged}
  [/side]

  {PASSIVE_LEADER 7 1}

  # When undead first time sighted one of player's units
  # undead are no more guardians and move to player's units
  [event]
    name=sighted
    [filter]
      side=1
    [/filter]
    [filter_second]
      side=6
    [/filter_second]
    [modify_unit]
      [filter]
        side=6
      [/filter]
      [status]
        guardian=no
      [/status]
    [/modify_unit]
  [/event]

  # ====================== start of logic for disabling guardian status of dwarvish groups ===========================
  #
  # Note: once unit was sighted and until it is still visible, no sighted events will be triggered for that unit.
  #
  # In this scenario all dwarves are divided into groups. Initially they are not moving (guardian status).
  # There are several events that may disable the guardian status for the whole group, thus the whole group starts acting
  # at the same time. Events that may disable the guardian status:
  # - Dwarf sighted unit of player's side. That is good, but not enough because of the 2 reasons:
  #       - Player's unit may be already visible by dwarves (sighted by another group).
  #       - Player's unit may be sighted by several group simultaneously. That is actually the same as previous reason,
  #         since after the first "sighted" event the unit is considered as already visible.
  # - Player's unit attacks a dwarf.
  # - Dwarf attacks one of player's units.
  #
  [event]
    name=sighted
    first_time_only=no
    [filter]
      side=1
    [/filter]
    [filter_second]
      side=5
    [/filter_second]
    [filter_condition]
      [variable]
        name=second_unit.role
        contains="group"
      [/variable]
    [/filter_condition]
    {VARIABLE group $second_unit.role}
    [fire_event]
      id=release_dwarvish_group
    [/fire_event]
  [/event]

  [event]
    name=attack
    first_time_only=no
    [filter]
      side=1
    [/filter]
    [filter_second]
      side=5
    [/filter_second]
    [filter_condition]
      [variable]
        name=second_unit.role
        contains="group"
      [/variable]
    [/filter_condition]
    {VARIABLE group $second_unit.role}
    [fire_event]
      id=release_dwarvish_group
    [/fire_event]
  [/event]

  [event]
    name=attack
    first_time_only=no
    [filter]
      side=5
    [/filter]
    [filter_second]
      side=1
    [/filter_second]
    [filter_condition]
      [variable]
        name=unit.role
        contains="group"
      [/variable]
    [/filter_condition]
    {VARIABLE group $unit.role}
    [fire_event]
      id=release_dwarvish_group
    [/fire_event]
  [/event]

  [event]
    id=release_dwarvish_group
    first_time_only=no
    [modify_unit]
      [filter]
        side=5
        role=$group
      [/filter]
      # Clear role, so that group will not be updated by this event anymore
      role=""
      [status]
        guardian=no
      [/status]
    [/modify_unit]
    {CLEAR_VARIABLE group}
  [/event]
  # ====================== end of logic for disabling guardian status of dwarvish groups ===========================

  [event]
    name=start
    {SAY elvish_leader _"Surround the wolves, quickly!"}
  [/event]

  # This sighted event doesn't change guardian status. It may seem illogical:
  # When orcs sighted dwarf, dwarf is talking, even if he is not seeing orcs yet
  # However, that is better for the user experience
  [event]
    name=sighted
    [filter]
      side=5
    [/filter]
    [filter_second]
      side=1
    [/filter_second]
    {SAY $unit.id _"Orcs are coming!"}
  [/event]

  # This sighted event doesn't change guardian status. It may seem illogical:
  # When orcs sighted undead, undead is talking, even if he is not seeing orcs yet
  # However, that is better for the user experience
  [event]
    name=sighted
    [filter]
      side=6
    [/filter]
    [filter_second]
      side=1
    [/filter_second]
    {SAY $unit.id _"Who dared to wake us up?"}
  [/event]

  [event]
    name=prestart

    # Spawns one Water Serpent each N turns
    {VARIABLE water_serpent_spawn_period {ON_DIFFICULTY5 10 8 6 5 4}}

    # Show objectives
    [objectives]
      summary=_"This scenario is Rark's nightmare"
      [objective]
        description=_"Move Rark and Bart into the cave"
        condition=win
      [/objective]
      [objective]
        description=_"Death of Rark (the wolf)"
        condition=lose
      [/objective]
      [objective]
        description=_"Death of Bart (the wolf)"
        condition=lose
      [/objective]
      {SCENARIO_SAVE_NOTE}
    [/objectives]

    # Place woses
    [store_locations]
      terrain=*^Fp
      x=1-15
      y=14-40
      variable=wose_hexes
    [/store_locations]
    [foreach]
      array=wose_hexes
      [do]
        {GENERIC_UNIT 3 "Wose" $this_item.x $this_item.y}
        [+unit]
          max_moves=0
          upkeep=loyal
        [/unit]
      [/do]
    [/foreach]
    {CLEAR_VARIABLE wose_hexes}
  [/event]

  # Scenery inside the cave
  {SCENERY_IMAGE items/box.png 1 7}
  {SCENERY_IMAGE items/box.png 8 7}
  {SCENERY_IMAGE items/barrel.png 8 5}
  {SCENERY_IMAGE scenery/coal.png 1 6}
  {SCENERY_IMAGE scenery/coal.png 3 7}
  {SCENERY_IMAGE scenery/gold.png 5 5}
  {SCENERY_IMAGE scenery/cart.png 6 2}
  {SCENERY_IMAGE "scenery/cart.png~FL()" 38 9}

  # Scenery inside Nessa's room
  {SCENERY_IMAGE scenery/bookshelf-1.png 34 16}
  {SCENERY_IMAGE scenery/bookshelf-3.png 35 16}
  {SCENERY_IMAGE scenery/bookshelf-1.png 36 15}
  {SCENERY_IMAGE "scenery/bookshelf-1.png~FL()" 38 15}
  {SCENERY_IMAGE "scenery/bookshelf-2.png~FL()" 39 16}
  {SCENERY_IMAGE scenery/basket.png 34 17}
  {SCENERY_IMAGE scenery/table.png 36 17}
  {SCENERY_IMAGE scenery/chair.png 37 18}
  {SCENERY_IMAGE scenery/plant.png 35 20}
  {SCENERY_IMAGE scenery/plant.png 37 16}
  {SCENERY_IMAGE scenery/plant-2.png 39 19}

  # Both Rark-wolf and Bart-wolf entered the cave
  [event]
    name=moveto
    [filter]
      id=rark_wolf,bart_wolf
      [filter_location]
        time_of_day_id=underground
      [/filter_location]
    [/filter]
    [filter_condition]
      [have_unit]
        count=2
        id=rark_wolf,bart_wolf
        [filter_location]
          time_of_day_id=underground
        [/filter_location]
      [/have_unit]
    [/filter_condition]

    # Close the outer cave entry and open the inner passage
    {QUAKE "rumble.ogg"}
    [kill]
      x,y=5,14
      animate=yes
    [/kill]
    [terrain]
      x,y=5,14
      terrain=Xue
    [/terrain]
    [terrain]
      x,y=7,8
      terrain=Re^Dr
    [/terrain]

    # Make screen black to hide further manipulations
    {FADE_TO_BLACK}

    {STORE_UNIT (id=rark_wolf) rark_wolf_unit}
    {STORE_UNIT (id=bart_wolf) bart_wolf_unit}

    # Kill all player's and elvish units
    [kill]
      side=1,3
    [/kill]

    # Stop the rain. Rain falls on a rainy_day schedule
    [replace_schedule]
      {FIRST_WATCH}
    [/replace_schedule]
    {STOP_SOUND_RAIN}

    # Put shroud to hide the starting area, which will be updated later
    [place_shroud]
      side=1
    [/place_shroud]

    # Make the screen normal after FADE_TO_BLACK
    {FADE_IN}

    # Recreate Rark and Bart in their usual form, create Bogarg
    {COPY_HERO rark $rark_wolf_unit.x $rark_wolf_unit.y}
    {CLEAR_VARIABLE rark_wolf_unit}
    {COPY_HERO bart $bart_wolf_unit.x $bart_wolf_unit.y}
    {CLEAR_VARIABLE bart_wolf_unit}
    {COPY_HERO bogarg 4 10}

    # Create other orcs. Do not create too many units, otherwise they may be created outside of the cave
    # Number and level of additional orcs depending on the difficulty
    # Daydream:  1*lvl_3 + 3*lvl_2 + 2*lvl_1
    # Easy:                4*lvl_2 + 2*lvl_1
    # Normal:              2*lvl_2 + 4*lvl_1
    # Hard:                1*lvl_2 + 5*lvl_1
    # Nightmare:                     5*lvl_1
    # Note: on Hard and Nightmare water is flooding 1.5x faster

    {GENERIC_UNIT 1 "Orcish Grunt" 3 11}{LOYAL_NO_TRAIT_NO_ICON}
    {GENERIC_UNIT 1 "Orcish Archer" 7 10}{LOYAL_NO_TRAIT_NO_ICON}

    #ifdef DAYDREAM
      {GENERIC_UNIT 1 "Orcish Crossbowman" 3 10}{LOYAL_NO_TRAIT_NO_ICON}
      {GENERIC_UNIT 1 "Orcish Slayer" 5 10}{LOYAL_NO_TRAIT_NO_ICON}
      {GENERIC_UNIT 1 "Orcish Warlord" 6 10}{LOYAL_NO_TRAIT_NO_ICON}
      {GENERIC_UNIT 1 "Orcish Warrior" 7 11}{LOYAL_NO_TRAIT_NO_ICON}
    #endif
    #ifdef EASY
      {GENERIC_UNIT 1 "Orcish Crossbowman" 3 10}{LOYAL_NO_TRAIT_NO_ICON}
      {GENERIC_UNIT 1 "Orcish Slayer" 5 10}{LOYAL_NO_TRAIT_NO_ICON}
      {GENERIC_UNIT 1 "Orcish Warrior" 6 10}{LOYAL_NO_TRAIT_NO_ICON}
      {GENERIC_UNIT 1 "Orcish Warrior" 7 11}{LOYAL_NO_TRAIT_NO_ICON}
    #endif
    #ifdef NORMAL
      {GENERIC_UNIT 1 "Orcish Crossbowman" 3 10}{LOYAL_NO_TRAIT_NO_ICON}
      {GENERIC_UNIT 1 "Orcish Assassin" 5 10}{LOYAL_NO_TRAIT_NO_ICON}
      {GENERIC_UNIT 1 "Orcish Warrior" 6 10}{LOYAL_NO_TRAIT_NO_ICON}
      {GENERIC_UNIT 1 "Orcish Grunt" 7 11}{LOYAL_NO_TRAIT_NO_ICON}
    #endif
    #ifdef HARD
      {GENERIC_UNIT 1 "Orcish Archer" 3 10}{LOYAL_NO_TRAIT_NO_ICON}
      {GENERIC_UNIT 1 "Orcish Assassin" 5 10}{LOYAL_NO_TRAIT_NO_ICON}
      {GENERIC_UNIT 1 "Orcish Warrior" 6 10}{LOYAL_NO_TRAIT_NO_ICON}
      {GENERIC_UNIT 1 "Orcish Grunt" 7 11}{LOYAL_NO_TRAIT_NO_ICON}
    #endif
    #ifdef NIGHTMARE
      {GENERIC_UNIT 1 "Orcish Archer" 3 10}{LOYAL_NO_TRAIT_NO_ICON}
      {GENERIC_UNIT 1 "Orcish Assassin" 5 10}{LOYAL_NO_TRAIT_NO_ICON}
      {GENERIC_UNIT 1 "Orcish Grunt" 6 10}{LOYAL_NO_TRAIT_NO_ICON}
    #endif


    # Place campfire
    # Fake unit will be created on a vacant hex to find best campfire location
    # Other approaches may be used, but I like that unit is created on the nearest vacant hex
    {NAMED_UNIT 1 "Goblin Spearman" 5 11 campfire_fake_unit _"Campfire Fake Unit" ()}
    {STORE_UNIT (id=campfire_fake_unit) campfire_location}
    [kill]
      id=campfire_fake_unit
    [/kill]
    [terrain]
      x=$campfire_location.x
      y=$campfire_location.y
      layer=overlay
      terrain=^Ecf
    [/terrain]
    {CLEAR_VARIABLE campfire_location}

    # Redraw unit's vision
    [redraw]
      side=1
    [/redraw]

    # Change player side name to "Orcs"
    [modify_side]
      side=1
      user_team_name= _"Orcs"
    [/modify_side]

    {SAY rark_copy _"Bogarg, what is going on here?"}
    {SAY bogarg_copy _"No time to talk, we must hurry. Water is flooding the cave!"}

    # Update objectives
    [objectives]
      summary=_"This scenario is Rark's nightmare"
      [objective]
        description=_"Find the exit"
        condition=win
      [/objective]
      [objective]
        description=_"Death of Rark"
        condition=lose
      [/objective]
      [objective]
        description=_"Death of Bart"
        condition=lose
      [/objective]
      [objective]
        description=_"Death of Bogarg"
        condition=lose
      [/objective]
      {SCENARIO_SAVE_NOTE}
    [/objectives]

    # Explicitly use this command, otherwise objectives will be shown the next turn
    [show_objectives]
    [/show_objectives]

    # Water Serpent spawn event. Must be removed once player exits the cave
    {VARIABLE water_serpent_spawn_turn "$($turn_number + 2)"}
    [event]
      id=water_serpent_spawn
      name=new turn
      first_time_only=no

      [filter_condition]
        [variable]
          name=turn_number
          equals=$water_serpent_spawn_turn
        [/variable]
      [/filter_condition]

      {VARIABLE_OP water_serpent_spawn_turn add $water_serpent_spawn_period}
      {GENERIC_UNIT 4 "Water Serpent" 1 11}{LOYAL_NO_TRAIT_NO_ICON}
    [/event]

    # Orcs sighted animals side (Water Serpent)
    [event]
      name=sighted
      [filter]
        side=4
      [/filter]
      [filter_second]
        side=1
      [/filter_second]
      [scroll_to_unit]
        id=$unit.id
      [/scroll_to_unit]
      [sound]
        name=hiss-big.wav
      [/sound]
      {DELAY 750}
      [scroll_to_unit]
        id=$second_unit.id
      [/scroll_to_unit]
    [/event]

    # Event that triggers "water flood" event
    # On Daydream, Easy and Normal one "water flood" event per turn
    # On Hard and Nightmare one event per even turn and two events per odd turn, i.e. 1.5x faster
    [event]
      name=new turn
      id=water_flood_trigger
      first_time_only=no
      [fire_event]
        id=water_flood
      [/fire_event]

      # Fire one additional event for Hard or Nightmare if this is odd turn
      {ON_DIFFICULTY5_PROGRESSIVE ()()()
      (
        {VARIABLE odd_turn "$($turn_number % 2)"}
        [if]
          {VARIABLE_CONDITIONAL odd_turn numerical_equals 1}
          [then]
            [fire_event]
              id=water_flood
            [/fire_event]
          [/then]
        [/if]
        {CLEAR_VARIABLE odd_turn}
      ) ()}
    [/event]

    # Create "water flood" event
    # This event makes the "gray water" (Wog and Wwg terrain codes) to flood.
    # Make sure that "gray water" doesn't exists outside of the cave, ot it will flood as well.
    [event]
      id=water_flood
      first_time_only=no

      # Store all units standing at locations that will become deep water during this event
      # Will be used to kill drowned units
      [store_unit]
        [filter]
          [filter_location]
            terrain=Wwg
          [/filter_location]
        [/filter]
        variable=drowned_units
      [/store_unit]

      # Replace shallow water with deep water
      [terrain]
        terrain=Wog
        [and]
          terrain=Wwg
        [/and]
      [/terrain]

      # Place shallow water near the deep water on any terrain except cave wall or chasm
      [terrain]
        terrain=Wwg
        [filter_adjacent_location]
          terrain=Wog
        [/filter_adjacent_location]
        [and]
          [not]
            terrain=Wog,X*^*,Q*^*
          [/not]
        [/and]
      [/terrain]

      # Remove items covered by shallow water
      # Items under deep water were removed earlier
      [remove_item]
        terrain=Wwg
      [/remove_item]

      # Call redraw explicitly, otherwise "water flood" terrain change is displayed
      # after drowned units are killed
      [redraw]
        side=1
      [/redraw]

      # Kill drowned units
      [foreach]
        array=drowned_units
        [do]
          [if]
            # If movement_costs.deep_water is uninitialized, then unit can not swim in a deep water
            [variable]
              name=this_item.movement_costs.deep_water
              equals=""
            [/variable]
            [then]
              [kill]
                x=$this_item.x
                y=$this_item.y
                animate=yes
                fire_event=yes
              [/kill]
            [/then]
          [/if]
        [/do]
      [/foreach]
      {CLEAR_VARIABLE drowned_units}

      # Dwarves run from the water
      [modify_unit]
        # Filter dwarves standing on the shallow water
        [filter]
          side=5
          [filter_location]
            terrain=Wwg
          [/filter_location]
        [/filter]
        # This dwarf is no more guardian, it will move to player's units. Assuming they are far from the water.
        [status]
          guardian=no
        [/status]
      [/modify_unit]

      # Remove this event once there is no gray water terrain in the whole map
      # That means water filled all reachable locations
      # The map is designed that water can flood only the cave
      [if]
        [not]
          [have_location]
            terrain=Wwg
          [/have_location]
        [/not]
        [then]
          [remove_event]
            id=water_flood_trigger
          [/remove_event]
          [remove_event]
            id=water_flood
          [/remove_event]
        [/then]
      [/if]
    [/event]
  [/event]

  # First time player's unit entered Nessa's room
  [event]
    name=moveto
    [filter]
      side=1
      [filter_location]
        time_of_day_id=indoors
      [/filter_location]
    [/filter]

    # Remove Water Serpents spawning
    [remove_event]
      id=water_serpent_spawn
    [/remove_event]
    {CLEAR_VARIABLE water_serpent_spawn_period}
    {CLEAR_VARIABLE water_serpent_spawn_turn}

    # Create Nessa
    {COPY_HERO nessa 37 18}
    # Update shroud taken into account Nessa's vision
    [redraw]
      clear_shroud=yes
    [/redraw]
    {SAY nessa_copy _"Hurry up!"}

    # Update objectives
    [objectives]
      summary=_"This scenario is Rark's nightmare"
      [objective]
        description=_"Move Rark, Bart and Bogarg into the Nessa's room"
        condition=win
      [/objective]
      [objective]
        description=_"Nessa must be inside her room"
        condition=win
      [/objective]
      [objective]
        description=_"Death of Rark"
        condition=lose
      [/objective]
      [objective]
        description=_"Death of Bart"
        condition=lose
      [/objective]
      [objective]
        description=_"Death of Bogarg"
        condition=lose
      [/objective]
      [objective]
        description=_"Death of Nessa"
        condition=lose
      [/objective]
      {SCENARIO_SAVE_NOTE}
    [/objectives]

    # Explicitly use this command, otherwise objectives will be shown the next turn
    [show_objectives]
    [/show_objectives]
  [/event]

  # Rark, Bart, Bogarg and Nessa are standing in Nessa's room
  [event]
    name=moveto
    [filter]
      side=1
    [/filter]
    [filter_condition]
      [have_unit]
        count=4
        id=rark_copy,bart_copy,bogarg_copy,nessa_copy
        [filter_location]
          time_of_day_id=indoors
        [/filter_location]
      [/have_unit]
    [/filter_condition]
    # kill water serpents, dwarves and undead
    [kill]
      side=4,5,6
    [/kill]
    {SAY nessa_copy _"Rark, it's time to open the door and see what's behind it."}
    [if]
      [have_unit]
        id=rark_copy
        x=36-37
        y=20
      [/have_unit]
      [then]
        # Rark opens the cave door
        [fire_event]
          id=open_cave_door
        [/fire_event]
      [/then]
      [else]
        {HIGHLIGHT_TEMP_IMAGE 36 20 items/gohere.png ()}
        # Rark moves to the cave door and opens it
        [event]
          name=moveto
          [filter]
            id=rark_copy
            x=36-37
            y=20
          [/filter]
          [fire_event]
            id=open_cave_door
          [/fire_event]
        [/event]

        # Update objectives
        [objectives]
          summary=_"This scenario is Rark's nightmare"
          [objective]
            description=_"Move Rark to the door"
            condition=win
          [/objective]
          [objective]
            description=_"Death of Rark"
            condition=lose
          [/objective]
          [objective]
            description=_"Death of Bart"
            condition=lose
          [/objective]
          [objective]
            description=_"Death of Bogarg"
            condition=lose
          [/objective]
          [objective]
            description=_"Death of Nessa"
            condition=lose
          [/objective]
          {SCENARIO_SAVE_NOTE}
        [/objectives]

        # Explicitly use this command, otherwise objectives will be shown the next turn
        [show_objectives]
        [/show_objectives]
      [/else]
    [/if]
  [/event]

  [event]
    id=open_cave_door

    # Update the map
    [terrain_mask]
      mask="{~add-ons/Captured_by_a_Nightmare/maps/07_escaping_the_nightmare.mask}"
    [/terrain_mask]

    # Label the Great Tree
    # When it dies (terrain changed to dead tree) player looses
    [label]
      terrain=Gg^Fet
      text= _"The Great Tree"
      color=255,0,50
    [/label]

    # Reverse schedule from night -> day -> morning
    # That is done for a nightmare atmosphere
    [replace_schedule]
      {SECOND_WATCH}
      {FIRST_WATCH}
      {DUSK}
      {AFTERNOON}
      {MORNING}
      {DAWN}
      current_time=1
    [/replace_schedule]

    # Rark opens the door
    {SAY rark_copy _"I can't."}
    {SAY nessa_copy _"Believe me, you are the only one who can open it."}
    [terrain]
      x,y=37,21
      layer=overlay
      terrain=^Pw/o
    [/terrain]

    # Clone main characters to the enemy side
    {CLONE_EVIL_UNIT rark_copy 5 38}
    {CLONE_EVIL_UNIT bart_copy 3 39}
    {CLONE_EVIL_UNIT bogarg_copy 4 36}
    {CLONE_EVIL_UNIT nessa_copy 7 37}

    # Modify enemy heroes to be guardians
    [modify_unit]
      [filter]
        id=bart_copy_evil,bogarg_copy_evil,nessa_copy_evil
      [/filter]
      [status]
        guardian=yes
      [/status]
    [/modify_unit]

    # Clone other units to the enemy side
    {STORE_UNIT
    (
      side=1
      [not]
        id=rark_copy,bart_copy,bogarg_copy,nessa_copy
      [/not]
    ) secondary_units}
    [foreach]
      array=secondary_units
      [do]
        {CLONE_EVIL_UNIT $this_item.id 5 38}
      [/do]
    [/foreach]
    {CLEAR_VARIABLE secondary_units}

    # Player gets gold and can recruit
    [modify_side]
      side=1
      gold=999
      recruit=Goblin Spearman,Orcish Grunt,Orcish Archer,Orcish Assassin,Wolf Rider
    [/modify_side]

    # Show the whole map
    [remove_shroud]
      side=1
    [/remove_shroud]
    [lift_fog]
      # multiturn=yes to allow player see cloned units
      multiturn=yes
      side=1
    [/lift_fog]

    {SAY rark_copy_evil _"Ha - ha!"}
    {SAY rark_copy _"What does that mean?"}

    # Update objectives
    [objectives]
      summary=_"This scenario is Rark's nightmare

Each turn death spreads across the forest. Defeat the enemy leader before the Great Tree near your castle dies."
      [objective]
        description=_"Defeat the enemy leader"
        condition=win
      [/objective]
      [objective]
        description=_"Death of the Great Tree"
        condition=lose
      [/objective]
      [objective]
        description=_"Death of Rark"
        condition=lose
      [/objective]
      [objective]
        description=_"Death of Bart"
        condition=lose
      [/objective]
      [objective]
        description=_"Death of Bogarg"
        condition=lose
      [/objective]
      [objective]
        description=_"Death of Nessa"
        condition=lose
      [/objective]
      [note]
        description=_"Rark can recruit now."
      [/note]
      {SCENARIO_SAVE_NOTE}
    [/objectives]

    # Explicitly use this command, otherwise objectives will be shown the next turn
    [show_objectives]
    [/show_objectives]

    # All recruited units are implicitly loyal
    # Clone them to the enemy side
    [event]
      name=recruit
      [filter]
        side=1
      [/filter]
      [filter_second]
        x,y=33,26
      [/filter_second]
      {OBJECT_LOYAL}
      [scroll_to]
        x="$($unit.x - 28)"
        y="$($unit.y + 12)"
      [/scroll_to]
      {DELAY 500}
      # Player's and enemy's castles locations are intentionally chosen the next way:
      # each player's castle hex and enemy's castle hex have the same x and y shift
      {CLONE_EVIL_UNIT $unit.id "$($unit.x - 28)" "$($unit.y + 12)"}
      {DELAY 500}
      [scroll_to]
        x=$unit.x
        y=$unit.y
      [/scroll_to]

      # Scroll to enemy only for the first time
      # Next time the nested event without scroll_to is used
      [event]
        name=recruit
        first_time_only=no
        [filter]
          side=1
        [/filter]
        {OBJECT_LOYAL}
        {CLONE_EVIL_UNIT $unit.id "$($unit.x - 28)" "$($unit.y + 12)"}
      [/event]
    [/event]

    [event]
      name=new turn
      [filter_condition]
        # Nessa is outside of the cave
        [have_unit]
          id=nessa_copy
          [filter_location]
            y=22-40
          [/filter_location]
        [/have_unit]
      [/filter_condition]
      {SAY nessa_copy _"I feel a black power coming from the enemy castle. It kills the forest."}
    [/event]

    # Event tha makes the forest dry
    # When the great tree dies - player looses
    # That is checked in the "new turn" event
    [event]
      id=forest_dry
      name=new turn
      first_time_only=no

      [store_locations]
        terrain=Re,Gll^Fdw,Sm
        variable=dry_hexes
      [/store_locations]

      # Flat
      [terrain]
        terrain=Re
        [and]
          terrain=Gs,Gg^Efm
        [/and]
        [filter_adjacent_location]
          find_in=dry_hexes
        [/filter_adjacent_location]
      [/terrain]

      # Forest
      [terrain]
        terrain=Gll^Fdw
        [and]
          terrain=*^Fp,*^Fms
        [/and]
        [filter_adjacent_location]
          find_in=dry_hexes
        [/filter_adjacent_location]
      [/terrain]

      # Swamp
      [terrain]
        terrain=Sm
        [and]
          terrain=Ss
        [/and]
        [filter_adjacent_location]
          find_in=dry_hexes
        [/filter_adjacent_location]
      [/terrain]

      # The great tree
      [terrain]
        terrain=Gll^Fetd
        [and]
          terrain=Gg^Fet
        [/and]
        [filter_adjacent_location]
          find_in=dry_hexes
        [/filter_adjacent_location]
      [/terrain]

      {CLEAR_VARIABLE dry_hexes}
    [/event]
  [/event]

  #===================      DEFEAT      ================================================================================
  [event]
    name=last breath
    [filter]
      id=rark_wolf
    [/filter]
    [sound]
      name=wail.wav
    [/sound]
    [animate_unit]
      [filter]
        id=bart_wolf
      [/filter]
      flag=idling
    [/animate_unit]
    {DELAY 500}
    [scroll_to_unit]
      id=$unit.id
    [/scroll_to_unit]
    [endlevel]
      result=defeat
    [/endlevel]
  [/event]

  [event]
    name=last breath
    [filter]
      id=bart_wolf
    [/filter]
    [sound]
      name=wail.wav
    [/sound]
    [animate_unit]
      [filter]
        id=rark_wolf
      [/filter]
      flag=idling
    [/animate_unit]
    {DELAY 500}
    [scroll_to_unit]
      id=$unit.id
    [/scroll_to_unit]
    [endlevel]
      result=defeat
    [/endlevel]
  [/event]

  [event]
    name=last breath
    [filter]
      id=rark_copy
    [/filter]
    {SAY bart_copy _"Rark, I had to protect you."}
    [endlevel]
      result=defeat
    [/endlevel]
  [/event]

  [event]
    name=last breath
    [filter]
      id=bart_copy
    [/filter]
    {SAY rark_copy _"Bart, don't leave us."}
    [endlevel]
      result=defeat
    [/endlevel]
  [/event]

  [event]
    name=last breath
    [filter]
      id=bogarg_copy
    [/filter]
    {SAY rark_copy _"Bogarg, don't leave us."}
    [endlevel]
      result=defeat
    [/endlevel]
  [/event]

  [event]
    name=last breath
    [filter]
      id=nessa_copy
    [/filter]
    {SAY bogarg_copy _"Nessa!"}
    [endlevel]
      result=defeat
    [/endlevel]
  [/event]

  # Turn refresh to occur after the forest dry event on the same turn
  [event]
    name=turn refresh
    [filter_condition]
      [have_location]
        terrain=Gll^Fetd
      [/have_location]
    [/filter_condition]
    [scroll_to]
      terrain=Gll^Fetd
    [/scroll_to]
    {DELAY 1000}
    {ECHO _"The Great Tree died."}
    [endlevel]
      result=defeat
    [/endlevel]
  [/event]

  [event]
    name=last breath
    [filter]
      id=rark_copy_evil
    [/filter]
    {SAY rark_copy_evil _"Finally it's over!"}
    {VICTORY}
  [/event]
[/scenario]

#undef COPY_HERO
#undef CLONE_EVIL_UNIT
#undef ANIMATED_MAUSOLEUM_NO_WATER
